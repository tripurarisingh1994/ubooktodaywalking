import { Component } from '@angular/core';
import { NavController,AlertController,NavParams } from 'ionic-angular';
import { CheckingExistingCustProvider } from '../../providers/checking-existing-cust/checking-existing-cust';
import { Validators, FormBuilder, FormGroup, AbstractControl } from '@angular/forms';
import { ListPage } from '../list/list';
import { NewCustProvider } from '../../providers/new-cust/new-cust';
// import { Facebook, FacebookLoginResponse } from '@ionic-native/facebook';
import { Storage } from '@ionic/storage';
import { FacebookGraphProvider } from '../../providers/facebook-graph/facebook-graph';
import { BookServiceProvider } from '../../providers/book-service/book-service';

@Component({
  selector: 'page-home',
  templateUrl: 'home.html',
})
export class HomePage {
   private url="http://ubooktoday.com/android/walkin?userid=";
   isHidden:boolean=false
  //  exist_cust_full=[]     // to store search result of existing cust
  //  fullname:string=''     // for existing cust
  //  searchRes = []         // stroring search full response 
  //  searchEmail ='';           // Email for send existing cust

  //  emailInput:any='';

   id_to_save_mob
   userData: any;
   cust='existcust';
   values='';
   
  /**
   * Below Variable is used for validating 
   * New Customer
   */
    firstname:AbstractControl;
    lastname:AbstractControl;
    email:AbstractControl;
    mobile:AbstractControl;

  /**
   * These vriables are using for send to 
   * ListPage after checking 
   * exssting customer 
   * @ext_spa_id
   * @ext_email
   * @ext_id
   */
  
    ext_spa_id;     // Existing customer spa id 
    ext_email;      // Existing customer email
    ext_id;         // Existing customer id
    ext_mob;
    ext_fn;
    ext_ln;
    ext_email_id;
    // Facebook app id generated by developer.facebook.com (from your account)
    // FB_APP_ID: number = 429063840630080;
 
    /**
     * Below Variable for rest new customer fields
     * first name
     * last name
     * email
     * mobile
     */
      fname='';
      lname='';
      em='';
      mob='';

     spaid_from_spalogin:number=0;

     private todo : FormGroup;
     private todo1 : FormGroup;

     constructor(
        public navCtrl: NavController,
        public navParam : NavParams,
        private existCust:CheckingExistingCustProvider,
        private newCust:NewCustProvider,
        private formBuilder: FormBuilder,
        private alertCtrl: AlertController,
        // private fb: Facebook,
        private storage: Storage,
        private fbGraph: FacebookGraphProvider,
        // private loadingCtrl: LoadingController,
        private bookService: BookServiceProvider) {

          // taking data of existing customer 
          this.todo = this.formBuilder.group({
                     email: ['', Validators.required]
          });
          // taking data of new customer
          this.todo1 = this.formBuilder.group({
                      firstname: ['',Validators.required],
                      lastname: ['',Validators.required],
                      email: ['', Validators.compose([Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$'),Validators.required])],
                      mobile: ['',Validators.required]   
          });

  /**
   * Below code is also used in new customer validations
   */
      this.firstname = this.todo1.controls['firstname'];
      this.lastname = this.todo1.controls['lastname'];
      this.email = this.todo1.controls['email'];
      this.mobile = this.todo1.controls['mobile'];
  }

   // Alert Controller
   presentAlert(title:string,msg:string) {
    let alert = this.alertCtrl.create({
      title: title,
      message: msg,
      buttons: ['Dismiss']
    });
    alert.present();
  }

  presentAlert2(title:string,msg:string) {
    let alert = this.alertCtrl.create({
      title: title,
      message: msg,
      buttons: [ {
        text:'OK',
        handler: () => { 
          this.fname='';
          this.lname='';
          this.em='';
          this.mob='';
        }
      }]
    });
    alert.present();
  }
 
  // esting customer ngsubmit callback
  logForm(){
    // for(let i=0; i<this.searchRes.length;i++){
    //     if(this.searchRes[i].full_name == this.fullname){
    //       this.searchEmail = this.searchRes[i].email;
    //     }
    // }
    this.existCust.http.get(this.url+this.todo.value.email).subscribe(data=> {
      console.log(data)
      if(data['message']=='Please Enter Valid Details') {
        this.presentAlert("ubooktodaywalking",data['message']);
      }
      else {
          // this.ext_spa_id       =  data['data'].spa_id;
          this.ext_spa_id       =  this.spaid_from_spalogin;
          this.ext_email        =  data['data'].email;
          this.ext_id           =  data['data'].id;
          this.ext_fn           =  data['data'].firstname;
          this.ext_ln           =  data['data'].lastname;
          this.ext_email_id     =  data['data'].email_id;
          this.ext_mob          =  data['data'].primary_contact;
      
          this.navCtrl.push(ListPage,{
                ext_id:this.ext_id,
                ext_email:this.ext_email,
                // ext_spa_id:this.ext_spa_id,
                ext_spa_id:this.spaid_from_spalogin,
                ext_fn:this.ext_fn,
                ext_ln:this.ext_ln,
                ext_email_id:this.ext_email_id,
                ext_mob:this.ext_mob
          });
      }
    })
  }

  // new customer ngsubmit callback
  logForm1() {
    // console.log(this.todo1.value.firstname)
    // console.log(this.todo1.value.lastname)
    // console.log(this.todo1.value.email)
    // console.log(this.todo1.value.mobile)
    // console.log("sss "+this.spaid_from_spalogin);
    this.newCust.newCustReg(this.todo1.value.firstname,this.todo1.value.lastname,this.todo1.value.email,this.todo1.value.mobile,this.spaid_from_spalogin).subscribe(data=> {
      console.log(data);
      if(data['message']=='Successful') {

        this.existCust.http.get(this.url+this.todo1.value.email).subscribe(data=> {
          console.log(data)
          if(data['message']=='Please Enter Valid Details') {
            this.presentAlert("ubooktodaywalking",data['message']);
          }
          else {
                // this.ext_spa_id       =  data['data'].spa_id;
                this.ext_spa_id       =  this.spaid_from_spalogin;
                this.ext_email        =  data['data'].email;
                this.ext_id           =  data['data'].id;
                this.ext_fn           =  data['data'].firstname;
                this.ext_ln           =  data['data'].lastname;
                this.ext_email_id     =  data['data'].email_id;
                this.ext_mob          =  data['data'].primary_contact;   
                              
                this.fname='';
                this.lname='';
                this.em='';
                this.mob='';   
          
               this.navCtrl.push(ListPage,{
                ext_id:this.ext_id,
                ext_email:this.ext_email,
                // ext_spa_id:this.ext_spa_id,
                ext_spa_id:this.spaid_from_spalogin,
                ext_fn:this.ext_fn,
                ext_ln:this.ext_ln,
                ext_email_id:this.ext_email_id,
                ext_mob:this.ext_mob
              });
          }
        })
      }
      else {
        this.presentAlert2("ubooktodaywalking",data['message']);
      } 
    });
 } 
 
      // onKey(event: any) { 
      //       this.values = event.target.value;
      //       console.log(this.values)
      //       console.log(this.values.length)
      //       if(this.values.length >= 3) {
      //         this.existCust.searchExistingCust(this.values).subscribe(data=> {
      //           console.log(data['customerdata'][0].full_name)
      //           console.log(data['customerdata'].length)
      //           for(let i=0;i<data['customerdata'].length;i++) {
      //               this.exist_cust_full.push(data['customerdata'][i].full_name)
      //           }
      //           console.log(data);
      //           this.searchRes = data['customerdata'];
      //           for(let i=0;i<data['customerdata'].length;i++) {
      //                 this.exist_cust_full.push(data['customerdata'][i].full_name)
      //             }
      //         })
      //       }
      // }

    //   setFullName(fullname)  {
    //     console.log("fullname"+fullname);
    //     this.emailInput = ''
    //     this.emailInput = fullname;
    //     this.exist_cust_full = [];
    //     for(let i=0; i<this.searchRes.length;i++){
    //     if(this.searchRes[i].full_name == this.emailInput){
    //       this.searchEmail = this.searchRes[i].email;
    //     }
    // }

    //     this.existCust.http.get(this.url+this.searchEmail).subscribe(data=> {
    //       console.log(data)
    //       if(data['message']=='Please Enter Valid Details') {
    //         this.presentAlert("ubooktodaywalking",data['message']);
    //       }
    //       else {
    //           // this.ext_spa_id       =  data['data'].spa_id;
    //           this.ext_spa_id       =  this.spaid_from_spalogin;
    //           this.ext_email        =  data['data'].email;
    //           this.ext_id           =  data['data'].id;
    //           this.ext_fn           =  data['data'].firstname;
    //           this.ext_ln           =  data['data'].lastname;
    //           this.ext_email_id     =  data['data'].email_id;
    //           this.ext_mob          =  data['data'].primary_contact;
          
    //           this.navCtrl.push(ListPage,{
    //                 ext_id:this.ext_id,
    //                 ext_email:this.ext_email,
    //                 // ext_spa_id:this.ext_spa_id,
    //                 ext_spa_id:this.spaid_from_spalogin,
    //                 ext_fn:this.ext_fn,
    //                 ext_ln:this.ext_ln,
    //                 ext_email_id:this.ext_email_id,
    //                 ext_mob:this.ext_mob
    //           });
    //       }
    //     })

    //     this.searchRes = [];
    //     this.searchEmail = '';
    //     this.emailInput = '';
    //   }
      // onEmailInput(ev:any) {
      //   this.exist_cust_full=[];
      //   this.values = ev.target.value;
      //   console.log(this.values.length)
       
      //   if(this.values.length >= 3) {
      //     this.presentLoadingDefault();
      //   }
      //   console.log("existing cust"+this.exist_cust_full);
      // }
    
      // onClear() {
      //   console.log('4444')
      //   this.exist_cust_full=[];
      // }
     

      ionViewDidLoad() {
        console.log('ionViewDidLoad Home')
        this.storage.get('spa_id').then(val=> {
          console.log("spaid "+val); 
          this.spaid_from_spalogin=val;
          console.log("spa id from spalogin "+this.spaid_from_spalogin)
        })
      }
      ionViewCanEnter() {
        this.bookService.cart=[];
        this.bookService.cartName=[];
        this.bookService.x='';
      }

      presentPrompt(id,email) {
        let alert = this.alertCtrl.create({
          title: 'Enter Mobile',
          inputs: [
            {
              name: 'mobile',
              placeholder: 'mobile'
            },
          ],
          buttons: [
            // {
            //   text: 'Cancel',
            //   role: 'cancel',
            //   handler: () => {
            //     console.log('Cancel clicked');
            //   }
            // },
            {
              text: 'send',
              handler: data => {
                this.fbGraph.send_mobile(id,data.mobile).
                subscribe(data=> {
                  console.log(data)
                  this.presentAlert('Mobile',data['message']);

                  this.existCust.http.get(this.url+email).subscribe(data=> {
                    console.log(data)
                    if(data['message']=='Please Enter Valid Details') {
                      this.presentAlert("ubooktodaywalking",data['message']);
                    }
                    else {
                          // this.ext_spa_id       =  data['data'].spa_id;
                          this.ext_spa_id       =  this.spaid_from_spalogin;
                          this.ext_email        =  data['data'].email;
                          this.ext_id           =  data['data'].id;
                          this.ext_fn           =  data['data'].firstname;
                          this.ext_ln           =  data['data'].lastname;
                          this.ext_email_id     =  data['data'].email_id;
                          this.ext_mob          =  data['data'].primary_contact;
                    
                        this.navCtrl.push(ListPage,{
                          ext_id:this.ext_id,
                          ext_email:this.ext_email,
                          // ext_spa_id:this.ext_spa_id,
                          ext_spa_id:this.spaid_from_spalogin,
                          ext_fn:this.ext_fn,
                          ext_ln:this.ext_ln,
                          ext_email_id:this.ext_email_id,
                          ext_mob:this.ext_mob
                        });
                    }
                  })

                })
              }
            }
          ]
        });
        alert.present();
      }

      // presentLoadingDefault() {
      //   let loading = this.loadingCtrl.create({
      //     content: 'Please wait...'
      //   });
      //   loading.onDidDismiss(() => {
      //     console.log('Dismissed loading');
      //     this.existCust.searchExistingCust(this.values,this.spaid_from_spalogin).subscribe(data=> {
      //       this.exist_cust_full=[]; 
      //       this.searchRes = data['customerdata'];
      //       for(let i=0;i<data['customerdata'].length;i++) {
      //           this.exist_cust_full.push(data['customerdata'][i].full_name)
      //           console.log('33333333333333333333')
      //           console.log(data['customerdata'][i].full_name);
      //       }
      //       console.log(data);
      //     })
      //   });
      //   loading.present();
      
      //   setTimeout(() => {
      //     loading.dismiss();
      //   }, 2000);
      // }
      showPhoneFormat() {
        this.isHidden = !this.isHidden;
      }
 }
